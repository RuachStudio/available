generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL") // pooled (6543) for Prisma Client/runtime
  directUrl = env("DIRECT_URL") // direct (5432) for Prisma migrate/Studio
}

// --- Enums ---
// Use an enum for shirt sizes; map 2XL/3XL to valid identifiers
enum ShirtSize {
  XS
  S
  M
  L
  XL
  E2XL @map("2XL")
  E3XL @map("3XL")
}

// --- Models ---
model Registration {
  id             String   @id @default(uuid())
  contactName    String
  contactPhone   String?  @unique
  contactEmail   String?  @unique
  contactAddress String?
  prayerRequest  String?
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  // Primary contact optional shirt
  primaryWantsShirt Boolean    @default(false)
  primaryShirtSize  ShirtSize?

  attendees Attendee[]

  @@index([createdAt])
  @@index([contactEmail])
  @@index([contactPhone])
}

model Attendee {
  id      String  @id @default(uuid())
  name    String
  phone   String?
  email   String?
  address String?

  // Optional shirt per attendee
  wantsShirt Boolean    @default(false)
  shirtSize  ShirtSize?

  notes          String?
  registrationId String
  registration   Registration @relation(fields: [registrationId], references: [id], onDelete: Cascade)

  @@index([registrationId])
  @@index([wantsShirt, shirtSize])
}

model SpeakerPoll {
  id        Int      @id @default(autoincrement())
  speaker   String   @unique
  votes     Int      @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Payment {
  id          String   @id @default(cuid())
  stripeId    String   @unique
  amountCents Int
  currency    String
  email       String?
  name        String?
  type        String // "donation" | "shirt"
  shirtSize   String?
  createdAt   DateTime @default(now())

  @@index([createdAt])
  @@index([type])
}
